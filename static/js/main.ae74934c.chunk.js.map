{"version":3,"sources":["api/users.ts","api/todos.ts","components/TodoForm/TodoForm.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","TodoForm","onSubmit","users","useState","setTitle","UserId","setUserId","hasTitleError","setHasTitleError","hasUserError","setHasUserError","action","method","event","preventDefault","className","type","value","onChange","target","trim","placeholder","disabled","map","user","onClick","UserInfo","href","TodoInfo","todo","cn","TodoList","todos","getUser","usersFromServer","find","getNewTodoId","todoIds","flatMap","Math","max","App","initialTodos","todosFromServer","setTodos","newTodo","currentTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae74934c.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  onSubmit: (todo: Todo) => void;\n  users: User[];\n};\n\nexport const TodoForm: React.FC<Props> = ({ onSubmit, users }) => {\n  const [title, setTitle] = useState('');\n  const [UserId, setUserId] = useState(0);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserError(!UserId);\n\n    if (!title || !UserId) {\n      return;\n    }\n\n    onSubmit({\n      title,\n      completed: false,\n      userId: UserId,\n    });\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value.trim());\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserError(false);\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          value={title}\n          onChange={handleTitleChange}\n          placeholder=\"Title\"\n        />\n        {hasTitleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <select\n          data-cy=\"userSelect\"\n          onChange={handleUserIdChange}\n          value={UserId}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n          {users.map(user => (\n            <option\n              key={user.id}\n              value={user.id}\n              onClick={() => setUserId(user.id)}\n            >\n              {user.name}\n            </option>\n          ))}\n        </select>\n        {hasUserError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${user.email}`}\n    >\n      {user.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo',\n        { 'TodoInfo--completed': todo.completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo: Todo) => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { Todo } from './types/Todo';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoForm } from './components/TodoForm/TodoForm';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number) {\n  return usersFromServer.find(user => userId === user.id) || null;\n}\n\nfunction getNewTodoId(todos: Todo[]) {\n  const todoIds = todos.flatMap(todo => {\n    return todo.id ? todo.id : [];\n  });\n\n  return Math.max(...todoIds) + 1;\n}\n\nexport const App: React.FC = () => {\n  const initialTodos: Todo[] = todosFromServer.map(todo => ({\n    ...todo,\n    user: getUser(todo.userId),\n  }));\n\n  const [todos, setTodos] = useState(initialTodos);\n\n  const addTodo = (todo: Todo) => {\n    const newTodo = {\n      ...todo,\n      id: getNewTodoId(todos),\n      user: getUser(todo.userId),\n    };\n\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm onSubmit={addTodo} users={usersFromServer} />\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}